{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\polygon_without_ws\\\\stock-tracker\\\\src\\\\components\\\\StockTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line, Bar } from 'react-chartjs-2';\nimport 'chart.js/auto'; // Required for chart.js\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StockTracker = () => {\n  _s();\n  const [symbol, setSymbol] = useState('');\n  const [priceData, setPriceData] = useState([]);\n  const [volumeData, setVolumeData] = useState([]);\n  const [contractData, setContractData] = useState([]);\n  const [toggleVolume, setToggleVolume] = useState(false); // Toggles between volume and dollar amount\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchStockData(symbol);\n  };\n  const fetchStockData = async symbol => {\n    try {\n      //   const now = new Date();\n      //   const tenMinutesAgo = new Date(now.getTime() - 10 * 60 * 1000);\n\n      // Convert to YYYY-MM-DD format as required by Polygon API\n      //   const fromDate = tenMinutesAgo.toISOString().split('T')[0]; \n      //   const toDate = now.toISOString().split('T')[0]; \n\n      // Fetch stock price data\n      const priceResponse = await axios.get(`https://api.polygon.io/v2/aggs/ticker/${symbol}/range/1/minute/2024-08-09/2024-09-22?adjusted=true&sort=asc&apiKey=_grbZQMP5kasPyiTvmUtApzQ5dapTGSu`);\n      console.log(\"Price Response\", priceResponse.data.results);\n      setPriceData(priceResponse.data.results || []); // Update your price data state\n\n      // Fetch volume data for the closest expiry date\n      const volumeResponse = await axios.get(`https://api.polygon.io/v3/reference/options/contracts?underlying_ticker=${symbol}&contract_type=all&apiKey=_grbZQMP5kasPyiTvmUtApzQ5dapTGSu`);\n      console.log(volumeResponse.data.results);\n      setVolumeData(volumeResponse.data.results || []); // Update your volume data state\n    } catch (error) {\n      if (error.response && error.response.status === 429) {\n        // Handle rate limiting (Too Many Requests)\n        console.error(\"Rate limit exceeded. Please wait or upgrade your subscription.\");\n\n        // Implement a retry after a delay (e.g., 60 seconds)\n        setTimeout(() => {\n          fetchStockData(symbol); // Retry fetching data after 60 seconds\n        }, 6000); // Wait 60 seconds before retrying\n      } else {\n        console.error('Error fetching stock data:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    if (symbol) {\n      const interval = setInterval(() => {\n        fetchStockData(symbol);\n      }, 5000); // Fetch every second\n      return () => clearInterval(interval);\n    }\n  }, [symbol]);\n  const priceChart = {\n    labels: priceData.map(entry => new Date(entry.t).toLocaleTimeString()),\n    datasets: [{\n      label: 'Stock Price',\n      data: priceData.map(entry => entry.c),\n      fill: false,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)'\n    }]\n  };\n  const volumeChart = {\n    labels: volumeData.map(entry => new Date(entry.expiration_date).toLocaleTimeString()),\n    datasets: [{\n      label: 'Call Volume',\n      data: volumeData.map(entry => entry.call_volume),\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      borderColor: 'rgba(54, 162, 235, 1)',\n      borderWidth: 1\n    }, {\n      label: 'Put Volume',\n      data: volumeData.map(entry => entry.put_volume),\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      borderColor: 'rgba(255, 99, 132, 1)',\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Stock Symbol\",\n        value: symbol,\n        onChange: e => setSymbol(e.target.value.toUpperCase())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), priceData.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [symbol, \" Stock Price\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: priceChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), volumeData.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Volume Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: volumeChart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setToggleVolume(!toggleVolume),\n      children: toggleVolume ? 'Show Volume' : 'Show $ Amount'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(StockTracker, \"L5VCQiLKqar6CCqz6XJc5MUri90=\");\n_c = StockTracker;\nexport default StockTracker;\nvar _c;\n$RefreshReg$(_c, \"StockTracker\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","Bar","jsxDEV","_jsxDEV","Fragment","_Fragment","StockTracker","_s","symbol","setSymbol","priceData","setPriceData","volumeData","setVolumeData","contractData","setContractData","toggleVolume","setToggleVolume","handleSubmit","e","preventDefault","fetchStockData","priceResponse","get","console","log","data","results","volumeResponse","error","response","status","setTimeout","interval","setInterval","clearInterval","priceChart","labels","map","entry","Date","t","toLocaleTimeString","datasets","label","c","fill","backgroundColor","borderColor","volumeChart","expiration_date","call_volume","borderWidth","put_volume","children","onSubmit","type","placeholder","value","onChange","target","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/polygon_without_ws/stock-tracker/src/components/StockTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport 'chart.js/auto'; // Required for chart.js\r\n\r\nconst StockTracker = () => {\r\n  const [symbol, setSymbol] = useState('');\r\n  const [priceData, setPriceData] = useState([]);\r\n  const [volumeData, setVolumeData] = useState([]);\r\n  const [contractData, setContractData] = useState([]);\r\n  const [toggleVolume, setToggleVolume] = useState(false); // Toggles between volume and dollar amount\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    fetchStockData(symbol);\r\n  };\r\n\r\n  const fetchStockData = async (symbol) => {\r\n    try {\r\n    //   const now = new Date();\r\n    //   const tenMinutesAgo = new Date(now.getTime() - 10 * 60 * 1000);\r\n      \r\n      // Convert to YYYY-MM-DD format as required by Polygon API\r\n    //   const fromDate = tenMinutesAgo.toISOString().split('T')[0]; \r\n    //   const toDate = now.toISOString().split('T')[0]; \r\n  \r\n      // Fetch stock price data\r\n      const priceResponse = await axios.get(\r\n        `https://api.polygon.io/v2/aggs/ticker/${symbol}/range/1/minute/2024-08-09/2024-09-22?adjusted=true&sort=asc&apiKey=_grbZQMP5kasPyiTvmUtApzQ5dapTGSu`\r\n      );\r\n      \r\n      console.log(\"Price Response\",priceResponse.data.results);\r\n      setPriceData(priceResponse.data.results || []); // Update your price data state\r\n  \r\n      // Fetch volume data for the closest expiry date\r\n      const volumeResponse = await axios.get(\r\n        `https://api.polygon.io/v3/reference/options/contracts?underlying_ticker=${symbol}&contract_type=all&apiKey=_grbZQMP5kasPyiTvmUtApzQ5dapTGSu`\r\n      );\r\n      console.log(volumeResponse.data.results);\r\n  \r\n      setVolumeData(volumeResponse.data.results || []); // Update your volume data state\r\n    } catch (error) {\r\n      if (error.response && error.response.status === 429) {\r\n        // Handle rate limiting (Too Many Requests)\r\n        console.error(\"Rate limit exceeded. Please wait or upgrade your subscription.\");\r\n        \r\n        // Implement a retry after a delay (e.g., 60 seconds)\r\n        setTimeout(() => {\r\n          fetchStockData(symbol); // Retry fetching data after 60 seconds\r\n        }, 6000); // Wait 60 seconds before retrying\r\n      } else {\r\n        console.error('Error fetching stock data:', error);\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    if (symbol) {\r\n      const interval = setInterval(() => {\r\n        fetchStockData(symbol);\r\n      }, 5000); // Fetch every second\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [symbol]);\r\n\r\n  const priceChart = {\r\n    labels: priceData.map((entry) => new Date(entry.t).toLocaleTimeString()),\r\n    datasets: [\r\n      {\r\n        label: 'Stock Price',\r\n        data: priceData.map((entry) => entry.c),\r\n        fill: false,\r\n        backgroundColor: 'rgba(75,192,192,0.4)',\r\n        borderColor: 'rgba(75,192,192,1)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const volumeChart = {\r\n    labels: volumeData.map((entry) => new Date(entry.expiration_date).toLocaleTimeString()),\r\n    datasets: [\r\n      {\r\n        label: 'Call Volume',\r\n        data: volumeData.map((entry) => entry.call_volume),\r\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n        borderColor: 'rgba(54, 162, 235, 1)',\r\n        borderWidth: 1,\r\n      },\r\n      {\r\n        label: 'Put Volume',\r\n        data: volumeData.map((entry) => entry.put_volume),\r\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n        borderColor: 'rgba(255, 99, 132, 1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter Stock Symbol\"\r\n          value={symbol}\r\n          onChange={(e) => setSymbol(e.target.value.toUpperCase())}\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n\r\n      {priceData.length > 0 && (\r\n        <>\r\n          <h2>{symbol} Stock Price</h2>\r\n          <Line data={priceChart} />\r\n        </>\r\n      )}\r\n\r\n      {volumeData.length > 0 && (\r\n        <>\r\n          <h2>Volume Data</h2>\r\n          <Bar data={volumeChart} />\r\n        </>\r\n      )}\r\n\r\n      <button onClick={() => setToggleVolume(!toggleVolume)}>\r\n        {toggleVolume ? 'Show Volume' : 'Show $ Amount'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockTracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}